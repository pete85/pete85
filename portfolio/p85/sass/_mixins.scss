@mixin box-sizing($x: border-box) {
	-webkit-box-sizing: $x;
	-moz-box-sizing: $x;
	box-sizing: $x;
}

@mixin bgSize($x: cover) {
	-webkit-background-size: $x;
	-moz-background-size: $x;
  	-o-background-size: $x;
  	background-size: $x;
}

@mixin transitions {
	-webkit-transition: all 0.3s ease-in-out;
	-moz-transition: all 0.3s ease-in-out;
	transition: all 0.3s ease-in-out;	
} 

// prefix declarations
@mixin prefixed($property, $value) {
  @if $webkit == true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz == true {
    -moz-#{$property}: #{$value};
  }

  @if $ms == true {
    -ms-#{$property}: #{$value};
  }

  @if $o == true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}

// prefix keyframes
@mixin keyframes($name) {
  @if $webkit == true {
    @-webkit-keyframes #{$name} {
      @content;
    }
  }

  @if $moz == true {
    @-moz-keyframes #{$name} {
      @content;
    }
  }

  @if $ms == true {
    @-ms-keyframes #{$name} {
      @content;
    }
  }

  @if $o == true {
    @-o-keyframes #{$name} {
      @content;
    }
  }

  @keyframes #{$name} {
    @content;
  }
}

// Prefix declarations
@mixin prefixed($property, $value) {
    -webkit-#{$property}: unquote($value);
            #{$property}: unquote($value);
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  height: auto;

  &:before {
    /* Make an element a certain aspect ratio */
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  .seq-screen {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin whitestroke {
    text-shadow:
    -1px -1px 0 $white,
    1px -1px 0 $white,
    -1px 1px 0 $white,
    1px 1px 0 $white;  

}